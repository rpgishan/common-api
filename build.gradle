plugins {
    id 'java'
    id 'maven-publish'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'org.openapi.generator' version '7.1.0'
}

group = 'com.sundance.services'
version = '0.0.1-SNAPSHOT'
String appPackage = "${group}.commonapi"

java {
    sourceCompatibility = '17'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'io.swagger.core.v3:swagger-core:2.2.19'
    implementation 'org.openapitools:jackson-databind-nullable:0.2.6'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}


openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$rootDir/src/main/resources/api-spec/common-api-spec/v1/common-api.yaml")
    outputDir.set("$buildDir/generated")
    apiPackage.set("${appPackage}.controller")
    invokerPackage.set("${appPackage}.service")
    modelPackage.set("${appPackage}.dto")
    groupId.set("$group")
    id.set("common-api")
    version.set("$version")
    configOptions.set([
            title              : "Common API",
            dateLibrary        : "java8",
            delegatePattern    : "true",
            basePackage        : "${appPackage}",
            configPackage      : "${appPackage}.configuration",
            snapshotVersion    : "true",
            useSpringBoot3     : "true",
            useSpringController: "true",
    ])
}

sourceSets {
    main {
        java {
            srcDirs(files("${openApiGenerate.outputDir.get()}/src/main"))
        }
    }
}

tasks.compileJava {
    dependsOn(tasks.openApiGenerate)
}

tasks.named('test') {
    useJUnitPlatform()
}
